/*******************************************************************************
 Copyright 2018 bodand
 
 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at
 
     http://www.apache.org/licenses/LICENSE-2.0
 
 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
 ******************************************************************************/

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        // Apache Commons IO - Deleting temporary test files
        classpath group: 'commons-io', name: 'commons-io', version: '2.6'
    }
}

plugins {
    id 'scala'
    id 'maven'
    id 'jacoco'
    id 'com.diffplug.gradle.spotless' version '3.15.0'
}

import org.apache.commons.io.FileUtils

group 'com.github.isbodand'
version '1.3.4'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenLocal()
    jcenter()
    mavenCentral()
}

dependencies {
    // Scala - Standard library
    compile group: 'org.scala-lang', name: 'scala-library', version: '2.12.7'
    // Scala XML - XML library
    compile group: 'org.scala-lang.modules', name: 'scala-xml_2.12', version: '1.1.0'
    // Logback - Logger
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
    // Apache Commons IO - IO tools
    compile group: 'commons-io', name: 'commons-io', version: '2.6'
    // Jetbrains Annotations - Annotating
    compile group: 'org.jetbrains', name: 'annotations', version: '15.0'
    // JSON Simple - JSON library
    compile group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
    // Apache Commons Validator - Validating data
    compile group: 'commons-validator', name: 'commons-validator', version: '1.6'
    // Apache Commons Lang - JVM Property handling
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.8.1'
    // Apache HttpComponents HttpClient - HTTP library
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.6'
    // jSoup - HTML Parser
    compile group: 'org.jsoup', name: 'jsoup', version: '1.11.3'

    // Scala test
    testCompile group: 'org.scalatest', name: 'scalatest_2.12', version: '3.2.0-SNAP10'
    // jUnit
    testCompile group: 'junit', name: 'junit', version: '4.12'
    // Scalactic
    testCompile group: 'org.scalactic', name: 'scalactic_2.12', version: '3.0.5'
}

jar {
    baseName = 'nhstatistics-core'

    manifest {
        attributes 'Name': 'NHentaiStatistics Core'
        attributes 'Specification-Title': 'Made up nhentai api'
        attributes 'Specification-Version': "$version"
        attributes 'Specification-Vendor': 'InfoSoft Corporation'
    }

    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

task cleanTestDownloads() {
    doLast {
        println "Applpie"
    }

    doLast {
        for (int i = 0; i < 9; ++i) {
            File directory
            if (i == 0) {
                directory = new File('dwn')
            } else {
                directory = new File("dwn$i")
            }
            FileUtils.deleteDirectory(directory)
        }
    }

    doLast {
        FileUtils.deleteQuietly(new File('exp.bodandkeep.txt'))
        FileUtils.deleteQuietly(new File('got.bodandkeep.txt'))
        FileUtils.deleteQuietly(new File('testFile.bodandkeep.txt'))
    }
}

check {
    doLast {
        cleanTestDownloads.execute()
    }
}

task fillTemplates(type: Exec) {
    workingDir "$projectDir/doc/src/ins"

    commandLine 'perl', "fill.pl",
            "gradle_template.md", "mvn_template.md", "sbt_template.md"
}

task cutedoc(type: Exec, dependsOn: [scaladoc, classes, fillTemplates]) {
    workingDir "$projectDir"

    commandLine 'cutedoc'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task scaladocJar(type: Jar, dependsOn: scaladoc) {
    classifier = 'javadoc'
    from scaladoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives scaladocJar
}

install {
    repositories.mavenInstaller {
        pom.project {
            licenses {
                license {
                    //noinspection GroovyAssignabilityCheck
                    name 'The Apache Software License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    distribution 'repo'
                }
            }
        }
    }
}

jacocoTestReport {
    reports {
        xml.setEnabled(true)
        html.setEnabled(false)
    }
}

check.dependsOn jacocoTestReport

spotless {
    scala {
        scalafmt("1.5.1").configFile(".scalafmt.conf")
    }
}

